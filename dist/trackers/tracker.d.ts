import { Session } from '../core/session';
import { SpeedyPromise } from 'speedy-vision/types/core/speedy-promise';
import { SpeedyMedia } from 'speedy-vision/types/core/speedy-media';
/**
 * A Trackable is something that can be tracked
 */
export interface Trackable {
}
/**
 * The result of a Tracker in a particular frame of a session. Such result is
 * meant to be consumed by the user/application.
 */
export interface TrackerResult {
    /** the tracker that generated this result */
    readonly tracker: Tracker;
    /** an array of trackables (possibly empty) */
    readonly trackables: Trackable[];
}
/**
 * The output generated by a Tracker in a particular Frame of a Session
 */
export interface TrackerOutput {
    /** tracker result to be consumed by the user */
    readonly exports?: TrackerResult;
    /** optional image for testing */
    readonly image?: SpeedyMedia;
}
/**
 * A Tracker is an AR subsystem attached to a Session
 */
export interface Tracker {
    /** a string that identifies the type of the tracker */
    readonly type: string;
    /** initialize tracker @internal */
    _init: (session: Session) => SpeedyPromise<void>;
    /** release resources @internal */
    _release: () => SpeedyPromise<void>;
    /** update cycle @internal */
    _update: () => SpeedyPromise<void>;
    /** output of the last frame @internal */
    readonly _output: TrackerOutput;
    /** stats related to this tracker @internal */
    readonly _stats: string;
}
//# sourceMappingURL=tracker.d.ts.map